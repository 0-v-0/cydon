!
html[lang=en]
	head
		meta[charset=utf-8]
		meta[name=viewport content="width=device-width,initial-scale=1.0"]
		title{Cydon â€¢ TodoMVC}
		link:css[href=node_modules/todomvc-common/base.css]
		link:css[href=node_modules/todomvc-app-css/index.css]
		style{
			todo-app { display: block }
			[c-cloak] { display: none }
		}
	.
		todo-app.todoapp[c-cloak]
			header.header
				h1{todos}
				input.new-todo[autofocus autocomplete=off placeholder="What needs to be done?" c-model.lazy=newTodo @keyup=addTodo]
			section.main[c-show=items.length]
				input#toggle-all.toggle-all[type=checkbox c-model=allDone]
				label[for=toggle-all]{Mark all as complete}
				ul.todo-list
					li.todo[:class="completed: todo.done; editing: editing == data; hidden: filter != null && todo.done != filter"
						c-for="todo; items"]
						.view
							input.toggle[type=checkbox c-model=todo.done title=done]
							label[@dblclick=editTodo]{${todo.name}}
							button.destroy[@click=removeTodo]
						input.edit[c-model=todo.name @blur=doneEdit :="editing == data && this.focus()" @keyup=keyup]
			footer.footer[c-show=items.length]
				span.todo-count
					strong{${remaining()}}
					{ ${pluralize('item', remaining)} left}
				ul.filters
					li
						a[href=#/all :class="selected: visibility == 'all'"]{All}
					li
						a[href=#/active :class="selected: visibility == 'active'"]{Active}
					li
						a[href=#/completed :class="selected: visibility == 'completed'"]{Completed}
				button.clear-completed[@click=removeCompleted c-show="items.length > remaining()"]{Clear completed}
		footer.info
			p{Double-click to edit a todo}
			p{Written by }
				a[href=https://github.com/0-v-0]{0-v-0}
			p{Part of }
				a[href=http://todomvc.com]{TodoMVC}
		scr[src=./app.ts type=module]